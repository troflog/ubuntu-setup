===========================================================
			UBUNTU SOFTWARE AND SETTINGS
===========================================================

#-------------BASH----------------

#Make a script which open a terminal e.g
#!/bin/bash         
#gnome-terminal -e 'bash -ic "python3;exec bash"'\

#Make a file which is a script

echo '#!/bin/bash' > ubuntu-setup.sh
chmod +x ubuntu-setup.sh

#-----------SUBLIME TEXT 3------------

#Install sublime
wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
sudo apt-get install sublime-text

#First machine
cd ~/.config/sublime-text-3/Packages/
mkdir ~/Dropbox/Sublime
mv User ~/Dropbox/Sublime/
ln -s ~/Dropbox/Sublime/User

#Other machine
cd ~/.config/sublime-text-3/Packages/
rm -r User
ln -s ~/Dropbox/Sublime/User


#--------------GOOGLE CHROME---------------
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -P ~/Downloads
sudo dpkg -i ~/Downloadsgoogle-chrome-stable_current_amd64.deb



#--------------PYTHON--------------------
When using pip3 install --user foo the packages is install in
	Linux	~/.local/lib/python-2.x/site-packages

#Set up pip and virtualenv for python3
sudo apt-get install -y python-pip python3-pip
sudo pip3 -user install virtualenv
sudo pip3 -user install virtualenvwrappers
echo "source /usr/share/virtualenvwrapper/virtualenvwrapper.sh" >> ~/.bashrc
# First we export the WORKON_HOME variable which contains the directory in which our virtual environments are to be stored. Let's make this ~/.virtualenvs
export WORKON_HOME=~/.virtualenvs
#now also create this directory
mkdir $WORKON_HOME
#and put this export in our ~/.bashrc file so this variable gets automatically defined
echo "export WORKON_HOME=$WORKON_HOME" >> ~/.bashrc
#Make a python3 virtual environment
mkvirtualenv my_projec
#Make a python2 env
virtualenv -p /usr/bin/python2 my_project
#work on a virtual environment:
$ workon my_project


#Install scipy stack 
pip install jedi numpy scipy matplotlib  ipython jupyter pandas sympy nose

#Make a shortcut to my main environment
alias py34="source ~/py34/bin/activate"
e.g
alias pys = "source environments/trond/bin/activate"

#------------TMUX--------------------
#Make the tmux color scheme scheme to 256 color by making an alias
#and putting in 

set -g default-terminal "xterm-256color"

#--------------VIM-------------------
#Remap caps-lock and esc
#Gnome Tweak Tool
sudo apt-get install gnome-tweak-tool


#Make vim configuration configuration file
 ln -s ~/.vim/vimrc ~/.vimrc

sudo apt-get purge --auto-remove vim-gtk
 

#--------PYCHARM COMMUNITY-------------
sudo add-apt-repository ppa:mystic-mirage/pycharm
sudo apt-get update

sudo apt-get install pycharm-community

#--------------NEOVIM-------------------
#Install Neovim
sudo add-apt-repository ppa:neovim-ppa/stable
sudo apt-get update
sudo apt-get install neovim
sudo apt-get install python-dev python-pip python3-dev python3-pip
pip3 install --user --upgrade neovim
pip install --user --upgrade neovim

#Look in https://neovim.io/doc/user/provider.html#provider-python for more information

#To start the transition, link your previous configuration so Nvim can use it:

    mkdir ~/.config
    ln -s ~/.vim ~/.config/nvim
    ln -s ~/.vimrc ~/.config/nvim/init.vim    

#Install packages using Vundle with the following command
:PluginInstall
#Make an alias (important to have no space between vim and 'nvim')
#Put it in .bash_aliases
alias vim='nvim'
alias oldvim='vim'

#Swap files
mkdir -p ~/.vim/{backup_files,swap_files,undo_files}
#Add these to vimrc
set backupdir=~/.vim/backup_files//
set directory=~/.vim/swap_files//
set undodir=~/.vim/undo_files//



#-----------TERMINAL------------------------

#Set monokai for terminal
git clone git://github.com/pricco/gnome-terminal-colors-monokai.git
cd gnome-terminal-colors-monokai
./install.sh

#Remove with
dconf reset -f /org/gnome/terminal/legacy/profiles:/PROFILE_ID"


sudo dpkg -i google-chrome-stable_current_amd64.deb#------------VIMRC-----------------

